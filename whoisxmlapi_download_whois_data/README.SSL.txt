install_p12.py

Setting up ssl authentication to use with download_whois_data.py

Provided by WhoisXML API, Inc.

dated: 2018-02-06


Contents:
---------

1. Brief summary

2. Prerequisites

3. Installing the auth credentials

4. Using the downloader script

1. Brief summary
----------------

The goal is to set up  your authentication credentials so that you can
use  download_whois_data.py  with  the  option  --sslauth  instead  of
password authentication.

2. Prerequisites
----------------

You will  need a  p12 pack, a  file provided to  you by  WhoisXML API,
Inc. You  need a password you  have received in conjunction  with this
file. (This  is the file  imported to your  system or your  browser in
order to facilitate ssl auth.)

To be used  with the downloader script, this file  has to be converted
into three other files suitable for the script.

We  remark that  the files  are the  same as  those used  by the  bash
downloader  (in the  whoisdownload_bash subdirectory  of the  git repo
https://github.com/whois-api-llc/whois_database_download_support.   So
you may  choose to run  the bash script  for the conversion,  which is
described in the file "README.SSL" in that project.  You may choose to
copy  the files  whoisxmlapi.ca, client.crt  and client.key  generated
with the  bash converter next  to download_whois_data.py. If  you have
done  so, you  do not  need  to reed  further,  you can  use SSL  auth
readily.

So let us  assume that given your  p12 pack and password,  you want to
generate the three required files with the Python 2 script

install_p12.py.

In addition to the  prerequisites of download_whois_data.py (described
in the main README of the project, you will need two additional Python
packages.  So as  a root,  or  in an  administrator command-prompt  on
native Windows systems (prepared to run download_whois_data.py), do

pip2 install pycrypto pyopenssl

On Windows during this procedure you may encounter the following errors:

"Microsoft Visual C++ 9.0 is required. Get it from http://aka.ms/vcpython27"

and

"Microsoft Visual C++ 14.0 is required. Get it with "Microsoft Visual C++ Build Tools": http://landinghub.visualstudio.com/visual-cpp-build-tools"

To overcome these issues just visit  the web pages in the messages and
install  the pieces  of software  which are  available from  there for
free. The  second one will  require you  to restart your  computer. We
admit that this is a rather complicated  matter, but you need to do it
just once.  (Alternatively,  you may do the conversion on  a Linux box
where it is  simpler, and copy your  files, whoisxmlapi.ca, client.crt
and client.key to your Windows box from there.)

2. Installing the auth credentials
----------------------------------

You need to do the following just once:

-Put your p12 pack file into the directory where the download scripts
 (and this file) reside.

-Run the following command in the directory:

     install_p12.py

  (either  from  a shell  command-line  or  by double-clicking  it  on
  Windows).  A  series of  dialog windows will  guide you  through the
  simple process:

  -You have to select the pack.p12 file

  -Then you will be prompted for the password.

  If everything went right, a  dialog window will appear informing you
  that the files are prepared and you can use the script.  If an error
  occurs, you shall be informed about  it in a window: check the files
  and the password and run the script again in this case.

  The files  generated by  the script  are client.crt,  client.key and
  whoisxmlapi.ca  needed for  the authentication  and they  are placed
  next to the script by default. The key file will be only readable by
  you.

  IMPORTANT: keep the generated client.key confidential.

3. Using the script
-------------------

To use ssl authentication instead of password authentication, add

--sslauth

to the options  of the script when  you use it. You will  not need the
--user and  --password options  then, and the  script will  ignore the
password configuration ini file.
